// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Common > Duplicate imports > Export aliases > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Bar = 'foo'
interface Props {
  foo: _VTI_TYPE_Bar
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Export aliases > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Export aliases > 'multi-level.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import aliases > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Bar = 'foo'
interface Props {
  foo: _VTI_TYPE_Bar
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import aliases > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Bar = 'foo'
interface Props {
  foo: _VTI_TYPE_Bar
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import aliases > 'multi-level.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Bar = 'foo'
interface Props {
  foo: _VTI_TYPE_Bar
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import export default > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import export default > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Duplicate imports > Import export default > 'multi-level.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Enum types > Default > 'empty.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* empty-enum */ number | string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Enum types > Default > 'mixed.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* enum */ number | string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Enum types > Default > 'number.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* enum */ number
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Enum types > Default > 'string.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* enum */ string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Export aliases > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Export aliases > Multi level > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  foo: string
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Export aliases > Multi level > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  foo: string
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Export all > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import aliases > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = number
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import aliases > Multi level > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Bar = string
type _VTI_TYPE_Foo = number | _VTI_TYPE_Bar
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Default > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Multi level > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  foo: number
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Multi level > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Use aliases > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Use aliases > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import export default > Use aliases > '3.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = string
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import same type implicitly > Default > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
  baz: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Import same type implicitly > Default > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = 'foo'
type _VTI_TYPE_A = _VTI_TYPE_Foo
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
  baz: _VTI_TYPE_A
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Interface extends interface > Has reference > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Baz = boolean
type _VTI_TYPE_Bar = number
type _VTI_TYPE_Foo = string
interface Props {
  baz: _VTI_TYPE_Baz
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Interface extends interface > Has reference > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Baz = boolean
interface _VTI_TYPE_BaseProps {
  baz: _VTI_TYPE_Baz
}
type _VTI_TYPE_Bar = number
type _VTI_TYPE_Foo = string
interface Props {
  baz: _VTI_TYPE_Baz
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
  base: _VTI_TYPE_BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Interface extends interface > Has reference > '3.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Qux = 'qux'
type _VTI_TYPE_Baz = boolean
interface _VTI_TYPE_BaseProps {
  qux: _VTI_TYPE_Qux
  baz: _VTI_TYPE_Baz
}
type _VTI_TYPE_Bar = number
type _VTI_TYPE_Foo = string
interface Props {
  qux: _VTI_TYPE_Qux
  baz: _VTI_TYPE_Baz
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
  base: _VTI_TYPE_BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Interface extends interface > No reference > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  baz: boolean
  foo: string
  bar: number
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Interface without reference > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  foo: string
  bar: number
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Mixed aliases > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_F = 'A'
interface Props {
  foo: _VTI_TYPE_F
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Multi level reference > Default > '1.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = number
type _VTI_TYPE_Bar = _VTI_TYPE_Foo
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Multi level reference > Default > '2.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = number
type _VTI_TYPE_Bar = _VTI_TYPE_Foo
type _VTI_TYPE_Qux = _VTI_TYPE_Foo
type _VTI_TYPE_Baz = _VTI_TYPE_Bar
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
  baz: _VTI_TYPE_Baz
  qux: _VTI_TYPE_Qux
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Redeclaration of types > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = [number, number]
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Redeclaration of types > Same name > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo_2 = 'foo_2'
type _VTI_TYPE_Bar = _VTI_TYPE_Foo_2
type _VTI_TYPE_Foo = 'foo'
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Reference in property > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface _VTI_TYPE_Foo {
  foo: 'foo'
}
type _VTI_TYPE_Bar = _VTI_TYPE_Foo
interface Props {
  foo: _VTI_TYPE_Foo
  bar: _VTI_TYPE_Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Common > Strict type finding > Default > 'index.ts' ('default') 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  bar: string
}
defineProps<Props>()
</script>
"
`;
